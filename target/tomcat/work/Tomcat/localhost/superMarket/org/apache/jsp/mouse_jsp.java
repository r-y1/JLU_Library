/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2023-06-09 05:56:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mouse_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 网页鼠标点击特效（爱心） --><!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");
      out.write("    (function () {\r\n");
      out.write("        var a_idx = 0;\r\n");
      out.write("        window.onclick = function (event) {\r\n");
      out.write("            var a = new Array(\"❤click❤\");\r\n");
      out.write("\r\n");
      out.write("            var heart = document.createElement(\"b\"); //创建b元素\r\n");
      out.write("            heart.onselectstart = new Function('event.returnValue=false'); //防止拖动\r\n");
      out.write("\r\n");
      out.write("            document.body.appendChild(heart).innerHTML = a[a_idx]; //将b元素添加到页面上\r\n");
      out.write("            a_idx = (a_idx + 1) % a.length;\r\n");
      out.write("            heart.style.cssText = \"position: fixed;left:-100%;\"; //给p元素设置样式\r\n");
      out.write("\r\n");
      out.write("            var f = 16, // 字体大小\r\n");
      out.write("                x = event.clientX - f / 2, // 横坐标\r\n");
      out.write("                y = event.clientY - f, // 纵坐标\r\n");
      out.write("                c = randomColor(), // 随机颜色\r\n");
      out.write("                a = 1, // 透明度\r\n");
      out.write("                s = 1.2; // 放大缩小\r\n");
      out.write("\r\n");
      out.write("            var timer = setInterval(function () { //添加定时器\r\n");
      out.write("                if (a <= 0) {\r\n");
      out.write("                    document.body.removeChild(heart);\r\n");
      out.write("                    clearInterval(timer);\r\n");
      out.write("                } else {\r\n");
      out.write("                    heart.style.cssText = \"font-size:16px;cursor: default;position: fixed;color:\" +\r\n");
      out.write("                        c + \";left:\" + x + \"px;top:\" + y + \"px;opacity:\" + a + \";transform:scale(\" +\r\n");
      out.write("                        s + \");\";\r\n");
      out.write("\r\n");
      out.write("                    y--;\r\n");
      out.write("                    a -= 0.016;\r\n");
      out.write("                    s += 0.002;\r\n");
      out.write("                }\r\n");
      out.write("            }, 15)\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        // 随机颜色\r\n");
      out.write("        function randomColor() {\r\n");
      out.write("\r\n");
      out.write("            return \"rgb(\" + (~~(Math.random() * 255)) + \",\" + (~~(Math.random() * 255)) + \",\" + (~~(Math\r\n");
      out.write("                .random() * 255)) + \")\";\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("    }());\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
